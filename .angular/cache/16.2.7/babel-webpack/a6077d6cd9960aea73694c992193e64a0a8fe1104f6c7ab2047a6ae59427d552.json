{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlayerService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://api-url'; // Replace with API endpoint\n  }\n\n  getPlayers() {\n    return this.http.get(`${this.apiUrl}/players`);\n  }\n  getPlayer(id) {\n    return this.http.get(`${this.apiUrl}/players/${id}`);\n  }\n  addPlayer(player) {\n    return this.http.post(`${this.apiUrl}/players`, player);\n  }\n  updatePlayer(id, player) {\n    return this.http.put(`${this.apiUrl}/players/${id}`, player);\n  }\n  deletePlayer(id) {\n    return this.http.delete(`${this.apiUrl}/players/${id}`);\n  }\n  static #_ = this.ɵfac = function PlayerService_Factory(t) {\n    return new (t || PlayerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlayerService,\n    factory: PlayerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlayerService","constructor","http","apiUrl","getPlayers","get","getPlayer","id","addPlayer","player","post","updatePlayer","put","deletePlayer","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\player-manager-app\\src\\app\\player.service.ts"],"sourcesContent":["// src/app/player.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Player } from './Player';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  private apiUrl = 'http://api-url'; // Replace with API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  getPlayers(): Observable<Player[]> {\n    return this.http.get<Player[]>(`${this.apiUrl}/players`);\n  }\n\n  getPlayer(id: string): Observable<Player> {\n    return this.http.get<Player>(`${this.apiUrl}/players/${id}`);\n  }\n\n  addPlayer(player: Player): Observable<Player> {\n    return this.http.post<Player>(`${this.apiUrl}/players`, player);\n  }\n\n  updatePlayer(id: string, player: Player): Observable<Player> {\n    return this.http.put<Player>(`${this.apiUrl}/players/${id}`, player);\n  }\n\n  deletePlayer(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/players/${id}`);\n  }\n\n  // Implement custom query methods as needed\n}\n"],"mappings":";;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;EAEI;;EAEvCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAC1D;EAEAG,SAASA,CAACC,EAAU;IAClB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,YAAYI,EAAE,EAAE,CAAC;EAC9D;EAEAC,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,UAAU,EAAEM,MAAM,CAAC;EACjE;EAEAE,YAAYA,CAACJ,EAAU,EAAEE,MAAc;IACrC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,YAAYI,EAAE,EAAE,EAAEE,MAAM,CAAC;EACtE;EAEAI,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,YAAYI,EAAE,EAAE,CAAC;EAC/D;EAAC,QAAAQ,CAAA,G;qBAvBUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}