{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../player.service\";\nimport * as i3 from \"@angular/common\";\nfunction PlayerDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.player.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Age: \", ctx_r0.player.age, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Team: \", ctx_r0.player.team, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Position: \", ctx_r0.player.position, \"\");\n  }\n}\nexport class PlayerDetailComponent {\n  constructor(route, playerService) {\n    this.route = route;\n    this.playerService = playerService;\n  }\n  ngOnInit() {\n    // Retrieve player details based on the route parameter\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.playerService.getPlayer(id).subscribe(player => {\n        this.player = player;\n      });\n    }\n  }\n  static #_ = this.ɵfac = function PlayerDetailComponent_Factory(t) {\n    return new (t || PlayerDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PlayerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlayerDetailComponent,\n    selectors: [[\"app-player-detail\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function PlayerDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PlayerDetailComponent_div_0_Template, 9, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.player);\n      }\n    },\n    dependencies: [i3.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","player","name","ɵɵtextInterpolate1","age","team","position","PlayerDetailComponent","constructor","route","playerService","ngOnInit","id","snapshot","paramMap","get","getPlayer","subscribe","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PlayerService","_2","selectors","decls","vars","consts","template","PlayerDetailComponent_Template","rf","ctx","ɵɵtemplate","PlayerDetailComponent_div_0_Template","ɵɵproperty"],"sources":["C:\\Users\\User\\Desktop\\player-manager-app\\src\\app\\player-detail\\player-detail.component.ts","C:\\Users\\User\\Desktop\\player-manager-app\\src\\app\\player-detail\\player-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlayerService } from '../player.service';\nimport { Player } from '../Player';\n\n@Component({\n  selector: 'app-player-detail',\n  templateUrl: './player-detail.component.html',\n  styleUrls: ['./player-detail.component.css'],\n})\nexport class PlayerDetailComponent implements OnInit {\n  player: Player | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private playerService: PlayerService\n  ) {}\n\n  ngOnInit(): void {\n    // Retrieve player details based on the route parameter\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.playerService.getPlayer(id).subscribe((player) => {\n        this.player = player;\n      });\n    }\n  }\n}\n","<!-- Display player details -->\n<div *ngIf=\"player\">\n    <h2>{{ player.name }}</h2>\n    <p>Age: {{ player.age }}</p>\n    <p>Team: {{ player.team }}</p>\n    <p>Position: {{ player.position }}</p>\n  </div>\n  "],"mappings":";;;;;;ICCAA,EAAA,CAAAC,cAAA,UAAoB;IACZD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC5BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC9BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAHlCH,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAC,IAAA,CAAiB;IAClBR,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAS,kBAAA,UAAAH,MAAA,CAAAC,MAAA,CAAAG,GAAA,KAAqB;IACrBV,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAS,kBAAA,WAAAH,MAAA,CAAAC,MAAA,CAAAI,IAAA,KAAuB;IACvBX,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAS,kBAAA,eAAAH,MAAA,CAAAC,MAAA,CAAAK,QAAA,KAA+B;;;ADKtC,OAAM,MAAOC,qBAAqB;EAGhCC,YACUC,KAAqB,EACrBC,aAA4B;IAD5B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,aAAa,GAAbA,aAAa;EACpB;EAEHC,QAAQA,CAAA;IACN;IACA,MAAMC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACjD,IAAIH,EAAE,EAAE;MACN,IAAI,CAACF,aAAa,CAACM,SAAS,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEhB,MAAM,IAAI;QACpD,IAAI,CAACA,MAAM,GAAGA,MAAM;MACtB,CAAC,CAAC;;EAEN;EAAC,QAAAiB,CAAA,G;qBAhBUX,qBAAqB,EAAAb,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA3B,EAAA,CAAAyB,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBjB,qBAAqB;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCrC,EAAA,CAAAuC,UAAA,IAAAC,oCAAA,iBAKQ;;;QALFxC,EAAA,CAAAyC,UAAA,SAAAH,GAAA,CAAA/B,MAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}