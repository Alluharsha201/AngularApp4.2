{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlayerService {\n  constructor(http) {\n    this.http = http;\n    this.playersUrl = 'api end point';\n  }\n  getPlayers() {\n    return this.http.get(this.playersUrl);\n  }\n  getPlayer(id) {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.get(url);\n  }\n  addPlayer(player) {\n    return this.http.post(this.playersUrl, player);\n  }\n  updatePlayer(id, updatedPlayer) {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.put(url, updatedPlayer);\n  }\n  deletePlayer(id) {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function PlayerService_Factory(t) {\n    return new (t || PlayerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlayerService,\n    factory: PlayerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlayerService","constructor","http","playersUrl","getPlayers","get","getPlayer","id","url","addPlayer","player","post","updatePlayer","updatedPlayer","put","deletePlayer","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\player-manager-app\\src\\app\\player.service.ts"],"sourcesContent":["// player.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Player } from './Player';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  private playersUrl = 'api end point';\n\n  constructor(private http: HttpClient) {}\n\n  getPlayers(): Observable<Player[]> {\n    return this.http.get<Player[]>(this.playersUrl);\n  }\n\n  getPlayer(id: number): Observable<Player> {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.get<Player>(url);\n  }\n\n  addPlayer(player: Player): Observable<Player> {\n    return this.http.post<Player>(this.playersUrl, player);\n  }\n\n  updatePlayer(id: number, updatedPlayer: Player): Observable<Player> {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.put<Player>(url, updatedPlayer);\n  }\n\n  deletePlayer(id: number): Observable<void> {\n    const url = `${this.playersUrl}/${id}`;\n    return this.http.delete<void>(url);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,eAAe;EAEG;EAEvCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,UAAU,CAAC;EACjD;EAEAG,SAASA,CAACC,EAAU;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,UAAU,IAAII,EAAE,EAAE;IACtC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAASG,GAAG,CAAC;EACnC;EAEAC,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,IAAI,CAACR,UAAU,EAAEO,MAAM,CAAC;EACxD;EAEAE,YAAYA,CAACL,EAAU,EAAEM,aAAqB;IAC5C,MAAML,GAAG,GAAG,GAAG,IAAI,CAACL,UAAU,IAAII,EAAE,EAAE;IACtC,OAAO,IAAI,CAACL,IAAI,CAACY,GAAG,CAASN,GAAG,EAAEK,aAAa,CAAC;EAClD;EAEAE,YAAYA,CAACR,EAAU;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,UAAU,IAAII,EAAE,EAAE;IACtC,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAAOR,GAAG,CAAC;EACpC;EAAC,QAAAS,CAAA,G;qBA1BUjB,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbtB,aAAa;IAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}